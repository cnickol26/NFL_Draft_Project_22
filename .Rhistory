library(tidyverse)
library(gganimate)
library(ggplot2)
library(cowplot)
library(repr)
#loading command to make NFL field in ggplot (credit to Marschall Furman)
source("https://raw.githubusercontent.com/mlfurman3/gg_field/main/gg_field.R")
plays <- read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/plays.csv")
plays$uniqueplayId <- as.numeric(paste(as.character(plays$gameId),
as.character(plays$playId), sep=""))
plays <- read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/plays.csv")
plays <- read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/plays.csv")
plays$uniqueplayId <- as.numeric(paste(as.character(plays$gameId),
as.character(plays$playId), sep=""))
weeks <-read.csv("data_subset.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
## Starting with chemistry first. Want to read in each file and filter to just be chemistry classes and other classes that count outside the major to save space
data21 <- read.csv('2021-2022 Course Data_forBox.csv') %>% filter(Subject == 'CHEM')
majors <- read.csv('Majors at Graduation_forBox.csv')
current_year <- 2022
years <- seq(2010, current_year, 1)
read_data <- function(years){
data <- data.frame()
for (i in 1:(length(years)-1)){
if (i != years[length(years)]){
file_year <- paste(years[i], years[i+1], sep = "-")
file_name <- paste(file_year, 'Course Data_forBox.csv', sep = " ")
year_data <- read.csv(file_name) %>% filter(Subject == "CHEM" & Class.Component == "Lecture")
data <- data %>% rbind(year_data)
}
}
return(data)
}
chem_data <- read_data(years)
chem_majors <- majors %>% filter(Academic.Plan.Desc == "Chemistry (BS)")
chem_data2 <- chem_data %>% select(-Academic.Plan.Desc) %>% right_join(chem_majors, by = "X.StudentHashKey") %>% separate(Term.Desc, sep = " ", into = c("Year", "Season"))
season_order <- data_frame(Season = c('Winter', 'Spring', 'Summer', 'Fall'),
Order = c(1,2,3,4))
chem_data3 <- chem_data2 %>% left_join(season_order, by = "Season")
test <- chem_data3 %>% filter(X.StudentHashKey == 'MTV3E`F$2*0/ELM8LZ6A-""3I;"SO]JXHI4O[K.V18V') %>% filter(Class.Component == "Lecture") %>% arrange(Year, Order, Catalog.Number) %>% unique() %>% mutate(class_number = row_number())
View(chem_majors)
View(test)
test <- chem_data3 %>% filter(Class.Component == "Lecture") %>% arrange(Year, Order, Catalog.Number) %>% unique() %>% mutate(class_number = row_number())
test <- chem_data3 %>% group_by(X.StudentHashKey) %>%  filter(Class.Component == "Lecture") %>% arrange(Year, Order, Catalog.Number) %>% unique() %>% mutate(class_number = row_number())
write.csv(test, "chemistry_data.csv", row.names = FALSE)
setwd("/Users/connornickol/Documents/R Projects/NFL_Draft_Project_22")
library(tidyverse)
wr <- read.csv("filtered_draft.csv")
View(wr)
wr <- wr %>% mutate(yds_game = Rec.Yards/Games)
wr <- wr %>% mutate(yds_game = Rec.Yards/Games,
yds_game = scale(yds_game),
Rec.TD = scale(Rec.TD),
RAS = scale(RAS))
wr_model <- wr %>% select(Overall, yds_game, Rec.TD, RAS, P_five)
View(wr_model)
wr_model <- wr %>% select(Overall, yds_game, Rec.TD, RAS, P_five) %>% mutate(P_five = as.factor(P_five))
View(wr_model)
wr_model <- wr %>% select(Overall, yds_game, Rec.TD, RAS, P_five, Year) %>% mutate(P_five = as.factor(P_five))
train <- wr_model %>% filter(Year < 2021) %>% select(-Year)
test <- wr_model %>% filter(Year >= 2021) %>% select(-Year)
model <- lm(Overall ~., data = train, method = 'lm')
model <- lm(Overall ~., data = train)
summary(model)
test$predict<-round(predict(result,newdata = test))
test$predict<-round(predict(model,newdata = test))
test_mse_ln<-mean((test$Overall-test$predict)^2)
test_mse_ln
View(test)
View(wr_model)
View(wr)
View(test)
View(wr)
## PUT PLAYER LOAD DATA HERE
player_load <- read.csv('Spring_avg2022.csv')
View(player_load)
knitr::opts_chunk$set(echo = TRUE)
## Load in the required packages and data
library(tidyverse)
library(stringr)
library(ggplot2)
library(kableExtra)
library(readxl)
library(ggstance)
## PUT 4 COLUMN TEAM REPORT DATA HERE
catapult <- read.csv('WWout_08-02-23.csv')
## PUT PLAYER LOAD DATA HERE
player_load <- read.csv('Spring_avg2022.csv')
remove <- c()
## Want to first split the Name column into two so we have a position group column and a name column
catapult[c('Position','Athlete')] <- str_split_fixed(catapult$Name, '-', 2) %>%
str_trim(side = 'both')
positions <- catapult %>% select(Athlete,Position) %>% filter(Position != 'Average')
##Reorder positions factor
reorder_pos <- c('QB','RB','WR','TE','OL',
'DE/BAN','DT','LB','CB','S')
positions$Position <- str_trim(positions$Position, side = 'both')
positions$Athlete <- str_trim(positions$Athlete, side = 'both')
positions <- positions %>% mutate(Position = as.factor(Position)) %>%
mutate(Position = factor(Position, levels = reorder_pos))
catapult_filter <- catapult %>% filter(Name != 'Average')
## Creating data sets for each skill group
for (i in 1:nrow(catapult_filter)){
if (catapult_filter$Position[i] %in% c("QB","RB","WR","S","CB")){
catapult_filter$Group[i] <- "SPEED (QB, RB, WR, CB, S)"
catapult_filter$Category[i] <- 'Speed'
}
else if (catapult_filter$Position[i] %in% c("TE","DE/BAN",'LB','KPS')){
catapult_filter$Group[i] <- "BIG SPEED (TE, DE/BAN, LB, KPS)"
catapult_filter$Category[i] <- 'Big Speed'
}
else{
catapult_filter$Group[i] <- "POWER (OL, DT)"
catapult_filter$Category[i] <- 'Power'
}
}
catapult_filter_2 <- catapult_filter %>% filter(Name != 'Average') %>% na.omit()
catapult_filter <- catapult_filter %>%
filter(Name != 'Average') %>%
filter(!(Athlete %in% remove)) %>%
na.omit()
## Calculating the team averages
team_speed_avg <- round(mean(catapult_filter$Maximum.Velocity..mph.),2)
team_highest_volume_avg <- round(mean(catapult_filter$Total.Player.Load),0)
team_highest_intensity_avg <- round(mean(catapult_filter$Player.Load.Per.Minute),2)
team_total_distance_avg <- round(mean(catapult_filter$Total.Distance..y.)/1760,2)
View(catapult_filter_2)
summary_table <- catapult_filter_2 %>% select(-c(Name,Group)) %>%
mutate(Total.Player.Load = round(Total.Player.Load),
Player.Load.Per.Minute = round(Player.Load.Per.Minute,2),
Explosive.Movements = round(Explosive.Movements))%>%
rename(' ' = Athlete,
`Tot Dur` = Total.Duration,
`Tot PL` = Total.Player.Load,
`PL Per Min` = Player.Load.Per.Minute,
`Explosive Movements`= Explosive.Movements)
View(player_load)
summary_table <- summary_table %>% left_join(player_load, by = c("Position"))
View(summary_table)
summary_table <- summary_table %>% left_join(player_load, by = c("Position")) %>%
mutate(`Pct of Spring Positional Avg` = paste0(round(`Tot PL`/(as.numeric(Avg_ttl_pl))*100,0),'%'))
summary_table <- summary_table %>% left_join(player_load, by = c("Position")) %>%
mutate(`Pct of Spring Positional Avg` = paste0(round(`Tot PL`/Avg_ttl_pl*100,0),'%'))
summary_table <- summary_table %>% left_join(player_load, by = c("Position")) %>%
mutate(`Pct of Spring Positional Avg` = paste0(round((`Tot PL`/Avg_ttl_pl)*100,0),'%'))
summary_table <- summary_table %>%
mutate(`Pct of Spring Positional Avg` = paste0(round((`Tot PL`/Avg_ttl_pl)*100,0),'%'))
View(summary_table)
summary_table <- summary_table %>% select(-Position, Avg_ttl_pl, avg_pl_pm)
summary_table <- summary_table[,c(5,1:4)]
summary_table <- catapult_filter_2 %>% select(-c(Name,Group)) %>%
mutate(Total.Player.Load = round(Total.Player.Load),
Player.Load.Per.Minute = round(Player.Load.Per.Minute,2),
Explosive.Movements = round(Explosive.Movements))%>%
rename(' ' = Athlete,
`Tot Dur` = Total.Duration,
`Tot PL` = Total.Player.Load,
`PL Per Min` = Player.Load.Per.Minute,
`Explosive Movements`= Explosive.Movements)
summary_table <- summary_table %>% left_join(player_load, by = c("Position"))
summary_table <- summary_table %>%
mutate(`Pct of Spring Positional Avg` = paste0(round((`Tot PL`/Avg_ttl_pl)*100,0),'%'))
summary_table <- summary_table %>% select(-Position, Avg_ttl_pl, avg_pl_pm)
summary_table <- summary_table[,c(5,1:4,6)]
summary_table <- catapult_filter_2 %>% select(-c(Name,Group)) %>%
mutate(Total.Player.Load = round(Total.Player.Load),
Player.Load.Per.Minute = round(Player.Load.Per.Minute,2),
Explosive.Movements = round(Explosive.Movements))%>%
rename(' ' = Athlete,
`Tot Dur` = Total.Duration,
`Tot PL` = Total.Player.Load,
`PL Per Min` = Player.Load.Per.Minute,
`Explosive Movements`= Explosive.Movements)
summary_table <- summary_table %>% left_join(player_load, by = c("Position"))
summary_table <- summary_table %>%
mutate(`Pct of Spring Positional Avg` = paste0(round((`Tot PL`/Avg_ttl_pl)*100,0),'%'))
summary_table <- summary_table %>% select(-Position, Avg_ttl_pl, avg_pl_pm)
summary_table <- summary_table %>% select(-Position, Avg_ttl_pl, avg_pl_pm)
summary_table <- summary_table %>% select(-c (Position, Avg_ttl_pl, avg_pl_pm))
summary_table <- catapult_filter_2 %>% select(-c(Name,Group)) %>%
mutate(Total.Player.Load = round(Total.Player.Load),
Player.Load.Per.Minute = round(Player.Load.Per.Minute,2),
Explosive.Movements = round(Explosive.Movements))%>%
rename(' ' = Athlete,
`Tot Dur` = Total.Duration,
`Tot PL` = Total.Player.Load,
`PL Per Min` = Player.Load.Per.Minute,
`Explosive Movements`= Explosive.Movements)
summary_table <- summary_table %>% left_join(player_load, by = c("Position"))
summary_table <- summary_table %>%
mutate(`Pct of Spring Positional Avg` = paste0(round((`Tot PL`/Avg_ttl_pl)*100,0),'%'))
summary_table <- summary_table %>% select(-c (Position, Avg_ttl_pl, avg_pl_pm))
summary_table <- summary_table[,c(5,1:4,7)]
summary_table %>%
kable(table.attr = "style = \"color: black;\"", align = 'c') %>%
pack_rows(index = table(fct_inorder(catapult_filter_2$Position)),
label_row_css = 'background-color: #141E3C; color: #FFFFFF') %>%
kable_styling('striped', position = 'center') %>%
column_spec(1:6,border_left = "2px solid black",
border_right = "2px solid black") %>%
kable_styling(font_size = 11, bootstrap_options = c('condensed')) %>%
row_spec(1:nrow(summary_table), bold = TRUE)
