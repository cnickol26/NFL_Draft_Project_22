down_vect<-numeric()
ytg_vec<-numeric()
fp_vec<-numeric()
end_drive<-function(down=1,ytg=10,fp=25){
if (down == 4 | fp > 100)
return (down = 4)
else
random<-rnorm(1,2,1)
down<-down+1
fp<-fp + random
ytg<-ytg - random
down_vect<-c(down_vect,down)
ytg_vec<-c(ytg_vec,ytg)
fp_vec<-c(fp_vec,fp)
return(down,Recall(end_drive))
}
end_drive(1)
end_drive<-function(down=1,ytg=10,fp=25){
if (down == 4 | fp > 100)
return (down = 4)
else
random<-rnorm(1,2,1)
down<-down+1
fp<-fp + random
ytg<-ytg - random
down_vect<-c(down_vect,down)
ytg_vec<-c(ytg_vec,ytg)
fp_vec<-c(fp_vec,fp)
return(Recall(end_drive))
}
end_drive(1)
end_drive<-function(down=1,ytg=10,fp=25){
if (down == 4)
return (down = 4)
else
random<-rnorm(1,2,1)
down<-down+1
fp<-fp + random
ytg<-ytg - random
down_vect<-c(down_vect,down)
ytg_vec<-c(ytg_vec,ytg)
fp_vec<-c(fp_vec,fp)
return(Recall(end_drive))
}
end_drive(1)
end_drive_test<-function(fp=25){
down = 1
if  (down == 4)
return(fp)
else
down =+ 1
return(end_drive_test)
}
end_drive_test()
# Recursive function to find factorial
recursive.factorial <- function(x) {
if (x == 0)
return (1)
else
return (x * recursive.factorial(x-1))
}
recursive.factorial(5)
end_drive_test<-function(fp=25){
down = 1
if  (down == 4)
return(fp)
else
down = down + 1
return(end_drive_test)
}
end_drive_test()
end_drive_test2<-function(){
down = 1
fp = 25
while(down < 10)
random<-rnorm(1,2,1)
fp = fp + rnorm
down = down + 1
print(fp)
}
end_drive_test2()
install.packages("rvest")
library(rvest)
test<-read_html("https://www.tfrrs.org/lists/2770/2019_2020_NCAA_Div._I_Indoor_Qualifying_(FINAL)/2020/i?gender=m")
View(test)
test<-read_html("https://www.tfrrs.org/lists/2770/2019_2020_NCAA_Div._I_Indoor_Qualifying_(FINAL)/2020/i?gender=m")
library(rvest)
test<-read_html("https://www.tfrrs.org/lists/2770/2019_2020_NCAA_Div._I_Indoor_Qualifying_(FINAL)/2020/i?gender=m")
test
View(test)
##generate the values of x
x0<-7
gety <- function(x,intercept,slope,eps.sigma)
{
y <- intercept + slope*x + rnorm(length(x),0,eps.sigma)
return(y)
}
#b
##generate the values of x
x<-rep(seq(1,10,1),20)
##initialize values for simulation
beta0 <- 0 ##intercept
beta1 <- 2 ##slope
sig <- 2 ##sd of error term
##run simulation 100,000 times
reps <- 100000
##create an array to store the estimated slope from each rep
store.slope<-array(0,reps)
start_time <- Sys.time() ##start time of loop
#set the seed
set.seed(2021)
for (i in 1:reps)
{
y<-gety(x^2, intercept=beta0, slope=beta1, eps.sigma=sig)
##use least squares to obtain regression equation on simulated data
result<-lm(y~x)
##store the estimated slope from this rep
store.slope[i]<-result$coeff[2]
}
end_time <- Sys.time() ## end time of loop
end_time - start_time ##time taken by loop
##bias of est slope
mean(store.slope)-beta1
##empirical variance of est slope
var(store.slope)
x0<-7
##initialize values for simulation
beta0 <- 0 ##intercept
beta1 <- 2 ##slope
sig <- 2 ##sd of error term
##run simulation 100,000 times
reps <- 100000
##create an array to store the estimated slope from each rep
store.slope2<-array(0,reps)
start_time <- Sys.time() ##start time of loop
#set the seed
set.seed(2021)
for (i in 1:reps)
{
y<-gety(x^2, intercept=beta0, slope=beta1, eps.sigma=sig)
##use least squares to obtain regression equation on simulated data
result2<-lm(y~x)
##store the estimated slope from this rep
store.slope2[i]<-result$coeff[2]
}
end_time <- Sys.time() ## end time of loop
end_time - start_time ##time taken by loop
##bias of est slope
mean(store.slope2)-beta1
##empirical variance of est slope
var(store.slope2)
mean(store.slope2)
mean(store.slope)
setwd("A:/NFL Draft Project/archive")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
college_stats<-read.csv("college_statistics.csv")
draft<-read.csv("2000-2021 Draft Picks.csv")
stats_05<-read.csv("player-game-statistics.csv")
View(college_stats)
install.packages("tidyquant")
install.packages("tidyquant")
install.packages("tidyquant")
install.packages("tidyquant")
library(tidyquant)
college_stats %>% group_by(player_name,season) %>% pivot_wider(names_from = statistc,values_from=value,value_fill=0) %>% ungroup()
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyquant)
college_stats %>% group_by(player_name,season) %>% pivot_wider(names_from = statistc,values_from=value,value_fill=0) %>% ungroup()
college_stats %>% group_by(player_name,season) %>% pivot_wider(names_from = statistic,values_from=value,value_fill=0) %>% ungroup()
college_stats %>% group_by(player_name,season) %>% pivot_wider(names_from = statistic,values_from=value) %>% ungroup()
test<-college_stats %>% group_by(player_name,season) %>% pivot_wider(names_from = statistic,values_from=value) %>% ungroup()
View(test)
test<-college_stats %>% group_by(player_name,season) %>% pivot_wider(names_from = statistic,
values_from=value,
values_fill=0) %>% ungroup()
test<-college_stats %>% group_by(player_name,season) %>% pivot_wider(names_from = statistic,
values_from=value) %>% ungroup()
test[is.na(test)]<-0
View(college_stats)
sum(is.na(college_stats))
college_stats_filter<-college_stats %>% na.omit()
test<-college_stats_filter %>% group_by(player_name,season) %>% pivot_wider(names_from = statistic,
values_from=value) %>% ungroup()
stats_14_20<-college_stats_filter %>% group_by(player_name,season) %>% pivot_wider(names_from = statistic,
values_from=value) %>% ungroup()
stats_14_20[stats_14_20=="NULL"]<-0
stats_14_20[stats_14_20=="NULL"]<-"0"
str(stats_14_20)
View(stats_14_20)
stats_14_20<- stats_14_20 %>% mutate(`Total Tackles`=as.numeric(`Total Tackles`))
str(college_stats_filter)
write.csv(stats_14_20,"stats_14_20.csv",row.names = TRUE)
stats_14_20=as.matrix(stats_14_20)
write.csv(stats_14_20,"stats_14_20.csv",row.names = TRUE)
setwd("A:/NFL Draft Project/archive")
test<-read.csv("stats_14_20.csv")
View(test)
stats_14_20=as.data.frame(stats_14_20)
write.csv(stats_14_20,"stats_14_20.csv",row.names = TRUE)
df_unlist<-function(df){
df<-as.data.frame(df)
nr<-nrow(df)
c.names<-colnames(df)
lscols<-as.vector(which(apply(df,2,is.list)==TRUE))
if(length(lscols)!=0){
for(i in lscols){
temp<-as.vector(unlist(df[,i]))
if(length(temp)!=nr){
adj<-nr-length(temp)
temp<-c(rep(0,adj),temp)
}
df[,i]<-temp
} #end for
df<-as.data.frame(df)
colnames(df)<-c.names
}
return(df)
}
df_unlist(stats_14_20)
write.csv(stats_14_20,"stats_14_20.csv",row.names = TRUE)
test<-df_unlist(stats_14_20)
write.csv(test,"stats_14_20.csv",row.names = TRUE)
test<-read.csv("stats_14_20.csv")
str(test)
stats_05<-read.csv("player_stats_05.csv")
View(stats_05)
stats_05_wr<-stats_05 %>% filter(Position == "WR")
stats_06<-read.csv("player_stats_06.csv")
stats_07<-read.csv("player_stats_07.csv")
stats_08<-read.csv("player_stats_08.csv")
stats_09<-read.csv("player_stats_09.csv")
stats_10<-read.csv("player_stats_10.csv")
stats_11<-read.csv("player_stats_11.csv")
stats_12<-read.csv("player_stats_12.csv")
stats_13<-read.csv("player_stats_13.csv")
stats_06_wr<-stats_06 %>% filter(Position == "WR")
stats_07_wr<-stats_07 %>% filter(Position == "WR")
stats_08_wr<-stats_08 %>% filter(Position == "WR")
stats_09_wr<-stats_09 %>% filter(Position == "WR")
stats_10_wr<-stats_10 %>% filter(Position == "WR")
stats_11_wr<-stats_11 %>% filter(Position == "WR")
stats_12_wr<-stats_12 %>% filter(Position == "WR")
stats_13_wr<-stats_13 %>% filter(Position == "WR")
stats_5_13_wr<-stats_05_wr %>% full_join(stats_06_wr) %>%
full_join(stats_07_wr) %>% full_join(stats_08_wr) %>%
full_join(stats_09_wr) %>% full_join(stats_10_wr) %>%
full_join(stats_11_wr) %>% full_join(stats_12_wr) %>%
full_join(stats_13_wr)
View(stats_5_13_wr)
stats_14_20<-df_unlist(stats_14_20)
stats_14_20[stats_14_20=="NULL"]<-0
stats_14_20<-college_stats_filter %>% group_by(player_name,season) %>% pivot_wider(names_from = statistic,
values_from=value) %>% ungroup()
stats_14_20<-df_unlist(stats_14_20)
stats_14_20<-college_stats_filter %>% group_by(player_name,season) %>% pivot_wider(names_from = statistic,
values_from=value) %>% ungroup()
stats_14_20<-df_unlist(stats_14_20)
stats_14_20<-college_stats_filter %>% group_by(player_name,season) %>% pivot_wider(names_from = statistic,
values_from=value) %>% ungroup()
test<-stats_14_20 %>% mutate(`Total Tackles`=as.character(`Total Tackles`))
str(test$`Total Tackles`)
